"""DOHUYA VSEGO

Revision ID: 36f9086a73e5
Revises: a946c2fdee49
Create Date: 2025-02-06 06:12:13.952531

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '36f9086a73e5'
down_revision: Union[str, None] = 'a946c2fdee49'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Role',
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Tag',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('username', sa.String(length=60), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('second_name', sa.String(length=30), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('email', sa.Text(), nullable=True),
    sa.Column('avatar_path', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('avatar_path'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('Bingo',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('preview_path', sa.String(length=100), nullable=False),
    sa.Column('size_x', sa.Integer(), nullable=False),
    sa.Column('size_y', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Notification',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('reference_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Subscription',
    sa.Column('subscriber_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['subscriber_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('UserRole',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('BingoCell',
    sa.Column('bingo_id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bingo_id'], ['Bingo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('BingoCounter',
    sa.Column('bingo_id', sa.UUID(), nullable=False),
    sa.Column('reaction_count', sa.Integer(), nullable=False),
    sa.Column('message_count', sa.Integer(), nullable=False),
    sa.Column('favorite_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['bingo_id'], ['Bingo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('BingoCustomization',
    sa.Column('bingo_id', sa.UUID(), nullable=False),
    sa.Column('background_color', sa.String(length=30), nullable=True),
    sa.Column('background_image_path', sa.Text(), nullable=True),
    sa.Column('image_scale', sa.Boolean(), nullable=True),
    sa.Column('border_color', sa.String(length=30), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['bingo_id'], ['Bingo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('BingoReaction',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bingo_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['bingo_id'], ['Bingo.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('BingoTag',
    sa.Column('bingo_id', sa.UUID(), nullable=False),
    sa.Column('tag_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['bingo_id'], ['Bingo.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['Tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Comment',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bingo_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['bingo_id'], ['Bingo.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CellCustomization',
    sa.Column('cell_id', sa.UUID(), nullable=False),
    sa.Column('background_color', sa.String(length=30), nullable=True),
    sa.Column('filled_color', sa.String(length=30), nullable=True),
    sa.Column('text_color', sa.String(length=30), nullable=True),
    sa.Column('text_align', sa.String(length=30), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['cell_id'], ['BingoCell.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('TemporalBingo',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bingo_id', sa.UUID(), nullable=False),
    sa.Column('bingo_cell_id', sa.UUID(), nullable=False),
    sa.Column('is_filled', sa.Boolean(), nullable=False),
    sa.Column('filled_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['bingo_cell_id'], ['BingoCell.id'], ),
    sa.ForeignKeyConstraint(['bingo_id'], ['Bingo.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('TemporalBingo')
    op.drop_table('CellCustomization')
    op.drop_table('Comment')
    op.drop_table('BingoTag')
    op.drop_table('BingoReaction')
    op.drop_table('BingoCustomization')
    op.drop_table('BingoCounter')
    op.drop_table('BingoCell')
    op.drop_table('UserRole')
    op.drop_table('Subscription')
    op.drop_table('Notification')
    op.drop_table('Bingo')
    op.drop_table('User')
    op.drop_table('Tag')
    op.drop_table('Role')
    # ### end Alembic commands ###
